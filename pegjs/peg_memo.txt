字句規則
単語 = [a-z][0-9a-zA-Z_]* 
クラス名 = [A-Z][0-9a-zA-Z_]* 
数値 = [0-9]*
空白 = [ \t\n\r]*
論理演算子
  AND = "and"
  OR = "or"
記号 = [+-*/%=<>~(){}.,;:"']
真 = "true"
偽 = "false"

構文規則
プログラム = (式文記号;)*
式文 = (代入式｜メソッド文|return文|break文)
  代入式 = (パイプ式|関数|メソッド文) 代入演算子 識別子
  パイプ式 =　（引数）　パイプライン演算子 （メソッド｜単語）　/ (論理式) ( パイプライン演算子 (メソッド｜単語) )*
  論理式 = 比較式　(論理演算子　比較式)* 
  比較式 = 加減式　(比較演算子　加減式)*
  加減式 = 乗除式 ((加算演算子｜減算演算子) 乗除式)*
  計算式 = (要素 (乗算演算子｜除算演算子) 要素)*
  関数 = ( 引数 ) => { 式文 }
  引数 = (識別子｜リテラル), / (識別子｜リテラル)
  キーワード引数 = 単語:(識別子｜リテラル), / 単語:(識別子｜リテラル)
  メソッド = (ブロック式|クラス名|リテラル).識別子 オプション引数*
  オプション引数 = (引数｜キーワード引数｜ブロック式｜関数)
